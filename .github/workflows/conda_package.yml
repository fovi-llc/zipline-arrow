name: Anaconda

on:
  workflow_dispatch

jobs:
  build_wheels:
    name: py${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      MACOSX_DEPLOYMENT_TARGET: 12.6
    defaults:
      run:
        shell: bash -l {0}

    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
        python: [ '3.7', '3.8', '3.9', '3.10' ]
        arch: [ 'x64', 'arm64' ]
        exclude:
          - os: windows-latest
            arch: arm64
          - os: ubuntu-latest
            arch: arm64

    steps:
      - name: set Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        if: ${{ matrix.os == 'macos-latest' }}
        with:
          xcode-version: latest-stable

      - name: Checkout zipline-reloaded
        uses: actions/checkout@v3

      - name: Setup miniconda3
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          auto-update-conda: true
          channel-priority: strict
          mamba-version: "*"
          python-version: ${{ matrix.python }}
          activate-environment: recipe
          channels: ml4t, conda-forge, defaults, anaconda, ranaroussi, adteam

      - name: conda install
        run: |
          conda activate recipe
          conda clean --all
          mamba install -n recipe boa conda-verify anaconda-client -c conda-forge

      - name: conda build for ${{ matrix.os }} Python ${{ matrix.python }}
        shell: bash -l {0}
        run: |
          conda mambabuild --output-folder . --python ${{ matrix.python }} conda/zipline-reloaded

      - name: store windows result
        uses: actions/upload-artifact@v2
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          path: win-64/*.tar.bz2

      - name: upload windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: anaconda upload -l main -u ml4t win-64/*.tar.bz2 --skip-existing

      - name: store linux result
        uses: actions/upload-artifact@v2
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          path: linux-64/*.tar.bz2

      - name: upload linux
        if: ${{ matrix.os  == 'ubuntu-latest' }}
        run: anaconda upload -l main -u ml4t linux-64/*.tar.bz2 --skip-existing

      - name: store macos result
        uses: actions/upload-artifact@v2
        if: ${{ matrix.os == 'macos-latest' }}
        with:
          path: osx-64/*.tar.bz2

      - name: upload macos
        if: ${{ matrix.os == 'macos-latest' }}
        run: anaconda upload -l main -u ml4t osx-64/*.tar.bz2 --skip-existing
